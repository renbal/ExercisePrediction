?qbeta
?invNorm
?choose
choose(5, 4)
choose(5, 5)
.5^4
*4
ans * 4
[1] * 4
0.625*4
0.0625*4
round(qnorm(.95, mean = 1100, sd = 75 / sqrt(100) ), 3)
round(pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.5, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.25, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.75, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.10, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.10, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
round(pnorm(.25, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
round(pnorm(.5, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
round(pnorm(.75, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
m1 <- 3
m2 <- 5
sd1 <- sqrt(0.6)
sd2 <- sqrt(0.68)
num1 <- 10
num2 <- 10
se <- sqrt(sd1*sd1/num1+sd2*sd2/num2)
error <- qt(0.975, df=pmin(num1, num2)-1)*se
left <- (m1-m2)-error
right <- (m1-m2)+error
left
right
?qt
confint <- as.vector(t.test(m1, m2, var.equal = TRUE)$conf.int)
error <- qt(0.975, df=9)*se
left <- (m1-m2)-error
right <- (m1-m2)+error
left
library(datasets)
data(ToothGrowth)
toothGrowth
ToothGrowth
m1 <- -3
m2 <- -1
s1 <- 1.5
s2 <- 1.8
n1 <- n2 <- 9
ts <- (m2 - m1) / se
se <- s * sqrt(1 / n1 + 1 / n2)
se <- s1 * sqrt(1 / n1 + 1 / n2)
ts <- (m2 - m1) / se
pv <- 2 * pnorm(-abs(ts))
pv
se <- s2 * sqrt(1 / n1 + 1 / n2)
ts <- (m2 - m1) / se
pv <- 2 * pnorm(-abs(ts))
pv
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(x, y)
cov(x, y)
model = lm(y ~ x)
model
data(mtcards)
data(mtcars)
model = lm(mtcars$mpg ~ mtcars$weight)
mtcars
names(mtcars)
?mtcars
model = lm(mtcars$mpg ~ mtcars$wt)
model
?cor
a <- c(1, 2, 3)
b <- c(.5, 1, 1.5)
model = lm(b ~ a)
model
cor(a, b)
cor(b, a)
cor (t, y) <- .5
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
model = lm(y ~ x)
model
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
mu <- mean(x)
sdev <- sd(d)
sdev <- sd(x)
sdev
norm <- (x-mu)/sdev^2
norm
mu
norm <- (x-mu)/sdev
norm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x
sum((x-0.573)^2)
sum((x-0.8)^2)
sum((x-0.36)^2)
sum((x-0.44)^2)
?pairs
?plot
library(swirl)
install_from_swirl("Regression Models")
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
set.seed(33833)
# Fit a random forest predictor relating the factor variable y to the remaining variables.
a <- randomForest(y ~ ., data = vowel.train, importance = FALSE)
b <- varImp(a)
order(b)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
set.seed(33833)
M <- train(y ~ ., data=vowel.train, method="rf")
varImp(M)
randomForest
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
install.packages("caret")
library(caret)
set.seed(33833)
a <- randomForest(y ~ ., data = vowel.train, importance = FALSE)
urlTrain <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
urlTest <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(urlTrain, training.csv)
download.file(urlTest, testing.csv)
training <- read.csv("training.csv")
testing <- read.csv("testing.csv")
urlTrain <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
urlTest <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(url=urlTrain, destfile='training.csv')
download.file(url=urlTest, destfile='testing.csv')
training <- read.csv('training.csv')
testing <- read.csv('testing.csv')
setwd("~/Courses/Coursera/Data Science Specialization/Practical Machine Learning/Project/Writeup")
install.packages("randomForest")
